/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package railway.reservation.system;

import com.mysql.jdbc.Statement;
import com.sun.jmx.snmp.BerDecoder;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Gunesh Madusanka
 */
public class compartment_reservation extends javax.swing.JFrame {

    /**
     * Creates new form booking_interface
     */
    
     int x, y;
    public compartment_reservation() {
        initComponents();
        status();
        com_chcker();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTextField1 = new javax.swing.JTextField();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nic = new javax.swing.JTextField();
        org = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        starts = new javax.swing.JComboBox();
        ends = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        passenger = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        s_date = new com.toedter.calendar.JDateChooser();
        e_date = new com.toedter.calendar.JDateChooser();
        jLabel19 = new javax.swing.JLabel();
        dates = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        line = new javax.swing.JComboBox();
        line1 = new javax.swing.JComboBox();
        jCalendar2 = new com.toedter.calendar.JCalendar();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        first = new javax.swing.JRadioButton();
        second = new javax.swing.JRadioButton();
        authorized = new javax.swing.JTextField();
        third = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        km = new com.toedter.components.JSpinField();
        vat = new com.toedter.components.JSpinField();
        total = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        count = new com.toedter.components.JSpinField();
        jLabel15 = new javax.swing.JLabel();
        res_charge = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        fee = new com.toedter.components.JSpinField();
        ava_count = new javax.swing.JLabel();
        res_com = new javax.swing.JLabel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        kGradientPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                kGradientPanel1MouseDragged(evt);
            }
        });
        kGradientPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                kGradientPanel1MousePressed(evt);
            }
        });

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/shutdown_48px.png"))); // NOI18N
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Compartment Booking Entry Panel");

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Applicant NIC");

        jLabel3.setText("Name of the Organization");

        jLabel4.setText("Name of the Applicant");

        jLabel5.setText("Starting Station");

        jLabel6.setText("Terminating Station");

        nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nicKeyPressed(evt);
            }
        });

        org.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                orgKeyPressed(evt);
            }
        });

        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameKeyPressed(evt);
            }
        });

        starts.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                startsKeyPressed(evt);
            }
        });

        ends.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        ends.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                endsKeyPressed(evt);
            }
        });

        jLabel16.setText("Number of Passenger");

        passenger.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passengerKeyPressed(evt);
            }
        });

        jLabel17.setText("Strting Date");

        jLabel18.setText("Ending Date");

        s_date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                s_dateKeyPressed(evt);
            }
        });

        e_date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                e_dateKeyPressed(evt);
            }
        });

        jLabel19.setText("Intendent Dates for the Journey");

        dates.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datesMouseClicked(evt);
            }
        });
        dates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datesActionPerformed(evt);
            }
        });

        jLabel21.setText("Booking Date");

        line.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT Start Line First", "Main Line", "Matale Line", "Puttlam Line", "Northern Line", "Batticoloa Line", "Coast Line", "KV Line", "Trincomalee Line", "Talaimannar Line" }));
        line.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lineItemStateChanged(evt);
            }
        });
        line.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lineMouseClicked(evt);
            }
        });
        line.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lineKeyPressed(evt);
            }
        });

        line1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT End Line First", "Main Line", "Matale Line", "Puttlam Line", "Northern Line", "Batticoloa Line", "Coast Line", "KV Line", "Trincomalee Line", "Talaimannar Line" }));
        line1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                line1ItemStateChanged(evt);
            }
        });
        line1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                line1MouseClicked(evt);
            }
        });
        line1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                line1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel2)
                        .addGap(95, 95, 95)
                        .addComponent(nic, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel3)
                        .addGap(37, 37, 37)
                        .addComponent(org, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel4)
                        .addGap(54, 54, 54)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel21)
                        .addGap(97, 97, 97)
                        .addComponent(jCalendar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(line, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(line1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel5)
                        .addGap(75, 75, 75)
                        .addComponent(starts, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(37, 37, 37)
                            .addComponent(jLabel18)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(e_date, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(39, 39, 39)
                            .addComponent(jLabel19)
                            .addGap(13, 13, 13)
                            .addComponent(dates, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel17)
                        .addGap(102, 102, 102)
                        .addComponent(s_date, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel16))
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ends, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passenger, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(nic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3))
                    .addComponent(org, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel21))
                    .addComponent(jCalendar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(line, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(line1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel5))
                    .addComponent(starts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ends, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel16))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(passenger, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(s_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(e_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setText("Class");

        jLabel13.setText("Authorized Person");

        buttonGroup1.add(first);
        first.setText("1st Class");
        first.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        buttonGroup1.add(second);
        second.setText("2nd Class");
        second.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        buttonGroup1.add(third);
        third.setSelected(true);
        third.setText("3rd Class");
        third.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        third.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thirdActionPerformed(evt);
            }
        });

        jLabel8.setText("Compartment Fare Calculator");

        jLabel11.setText("Number of KM");

        jLabel12.setText("Current VAT");

        jLabel14.setText("Total");

        km.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kmKeyPressed(evt);
            }
        });

        total.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                totalMouseClicked(evt);
            }
        });
        total.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                totalKeyPressed(evt);
            }
        });

        jLabel7.setText("Compartment Count(Count must be lower than 5)");

        count.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                countPropertyChange(evt);
            }
        });
        count.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                countKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                countKeyReleased(evt);
            }
        });

        jLabel15.setText("Reservation Chargers ");

        res_charge.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                res_chargeMouseClicked(evt);
            }
        });
        res_charge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                res_chargeKeyPressed(evt);
            }
        });

        jLabel20.setText("Price per KM");

        fee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                feeKeyPressed(evt);
            }
        });

        ava_count.setBackground(new java.awt.Color(204, 204, 255));
        ava_count.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        res_com.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(359, 359, 359)
                        .addComponent(km, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(jLabel10)
                                .addGap(45, 45, 45)
                                .addComponent(first)
                                .addGap(31, 31, 31)
                                .addComponent(second)
                                .addGap(9, 9, 9)
                                .addComponent(third))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addComponent(ava_count, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addComponent(res_com, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 33, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel12)
                        .addGap(221, 221, 221)
                        .addComponent(vat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel7)
                        .addGap(42, 42, 42)
                        .addComponent(count, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel15)
                        .addGap(172, 172, 172)
                        .addComponent(res_charge))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel20)
                        .addGap(221, 221, 221)
                        .addComponent(fee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel14)
                        .addGap(256, 256, 256)
                        .addComponent(total))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel13)
                        .addGap(75, 75, 75)
                        .addComponent(authorized)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(169, 169, 169))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(first)
                    .addComponent(second)
                    .addComponent(third))
                .addGap(27, 27, 27)
                .addComponent(ava_count, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(res_com, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel11))
                    .addComponent(km, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel12))
                    .addComponent(vat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(res_charge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(fee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(authorized, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        kGradientPanel2.setBorder(new javax.swing.border.MatteBorder(null));
        kGradientPanel2.setkEndColor(new java.awt.Color(102, 102, 0));
        kGradientPanel2.setkStartColor(new java.awt.Color(0, 102, 51));
        kGradientPanel2.setLayout(null);

        jButton2.setText("Ticket Booking");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        kGradientPanel2.add(jButton2);
        jButton2.setBounds(230, 10, 101, 30);

        jButton3.setText("Booking Cancelation");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        kGradientPanel2.add(jButton3);
        jButton3.setBounds(370, 10, 130, 30);

        jButton4.setText("Full Report ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        kGradientPanel2.add(jButton4);
        jButton4.setBounds(520, 10, 100, 30);

        jButton1.setText("Bill Generate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        kGradientPanel2.add(jButton1);
        jButton1.setBounds(700, 10, 100, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kGradientPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void thirdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thirdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thirdActionPerformed

    private void datesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_datesActionPerformed

    private void res_chargeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_res_chargeMouseClicked
        try {
            int total = 0;
            String classes;
            if (first.isSelected()) {
                classes = "1st Class";
            } else if (second.isSelected()) {
                classes = "2nd Class";
            } else {
                classes = "3rd Class";
            }

            if (classes.equals("1st Class")) {
                total = (Integer.parseInt(passenger.getText()) * 280);
                total += (total / 100) * vat.getValue();
                res_charge.setText(String.valueOf(total));
            }
            if (classes.equals("2nd Class")) {
                total = (Integer.parseInt(passenger.getText()) * 200);
                total += (total / 100) * vat.getValue();
                res_charge.setText(String.valueOf(total));
            }
            if (classes.equals("3rd Class")) {
                total = (Integer.parseInt(passenger.getText()) * 200);
                total += (total / 100) * vat.getValue();
                res_charge.setText(String.valueOf(total));
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_res_chargeMouseClicked

    private void totalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalMouseClicked
        try {
            int totals = (fee.getValue() * km.getValue()) + Integer.parseInt(res_charge.getText());
            total.setText(String.valueOf(totals));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_totalMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            validate_nic();
            SimpleDateFormat sdf = new SimpleDateFormat("E MMM dd yyyy");
            String start_date1 = sdf.format(s_date.getDate());
            String end_date1 = sdf.format(e_date.getDate());

            String date_now = sdf.format(jCalendar2.getDate());

            String classes;
            if (first.isSelected()) {
                classes = "1st Class";
            } else if (second.isSelected()) {
                classes = "2nd Class";
            } else {
                classes = "3rd Class";
            }

            db.iud("insert into compartment_reservation (nic, name_of_org, applicant, date,from1,to1, passenger,"
                    + " start_date, end_date, "
                    + "intendent, class1, authorize, km, vat, com_count, res_charge, total, status) values"
                    + " ('" + nic.getText() + "','" + org.getText() + "','" + name.getText() + "',"
                    + "'" + date_now + "',"
                    + "'" + starts.getSelectedItem().toString() + "','" + ends.getSelectedItem().toString() + "',"
                    + "'" + Integer.parseInt(passenger.getText()) + "','" + start_date1 + "',"
                    + "'" + end_date1 + "','" + Integer.parseInt(dates.getText()) + "','" + classes + "',"
                    + "'" + authorized.getText() + "','" + km.getValue() + "','" + vat.getValue() + "','" + count.getValue() + "',"
                    + "'" + Integer.parseInt(res_charge.getText()) + "','" + Integer.parseInt(total.getText()) + "','booking')");

            JOptionPane.showMessageDialog(rootPane, "Data Save Successfully", "Thank You", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            System.out.println(ends.getSelectedItem().toString());
            System.out.println(starts.getSelectedItem().toString());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void lineItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lineItemStateChanged
        try {
            starts.setSelectedItem("null");
            starts.removeAllItems();
            //Matale Line  Puttlam Line  Northern Line  Batticoloa Line  Coast Line  KV Line  Trincomalee Line Talaimannar Line
            String main[] = {"Maradana", "Dematagoda", "Kelaniya", "Wanawasala", "Hunupitiya", "Enderamulla", "Horape", "Ragama", "Walpola", "Batuwatte", "Bulugahagoda", "Ganemulla", "Yagoda", "Gampaha", "Daraluwa", "Bemmulla", "Magelegoda", "Heendeniya", "Veyangoda", "Wandurawa",
                "Keenawala", "Pallewala", "Ganegoda", "Wijayarajadahana", "Mihirigama", "Wilwatte", "Botale", "Abeypussa", "Yattalgoda", "Buthgamuwa", "Alawwa", "Wlakubura", "Polgahawela",
                "Panaleeya", "Tismalpola", "Yatagama", "Rambukkana", "Kadigamuwa", "Gangoda", "Ihalakotte", "Balana", "Kadugannawa", "Pilimatalawa", "Peradeniya", "Koshinna", "Gelioya",
                "Gampola", "Tembligala", "Ulapone", "Nawalapitiya", "Inguruoya", "Galaboda", "Watawala", "Ihalawatawala", "Rosella", "Hatton", "Kotagala", "Talawakele", "watagoda",
                "Greatwestern", "Radella", "Nanuoya", "Perakumpura", "Ambewela", "Pattipola", "Ohiya", "Idalgasinna", "Haputale", "Deyatalawa", "Bandarawela", "Kinigama",
                "Heeloya", "Kitalelle", "Elle", "Demodara", "Uduwara", "Haliela", "Badulla"
            };
            String matale[] = {"Sarasaviuyana", "Kandy", "Mahaiyawa", "Katugastota", "Udatalawinna", "Wattegama", "Pathanpha", "Udaththawala", "Ukuwela", "Matale"};
            String puttalama[] = {"Peralanda", "Kandana", "Kapuwatte", "Ja-Ela", "Tudella", "Kudahakapola", "Alawatupitiya", "Seeduwa", "Liyanagemulla",
                "Katunayaka Airport", "Katunayake", "Trade Zoone", "Kurana", "Negombo", "kattuwa", "Kochchikade", "Waikkala", "Bolawatte",
                "Borelessa", "Lunuwila", "Tummodara", "Nattandiya", "Walahapitiya", "Kudawewa", "Nelumpokuna", "Madampe", "Kakkapalliya",
                "Sawarana", "Chilaw", "Manuwangama", "Bangadeniya", "Arachchikattuwa", "Anawilundawa", "Battaluoya", "Pulachchikulam", "Mundal",
                "Mangalaeliya", "Madurankuliya", "Erukkalam pendu", "Palavi", "Thilladiya", "Puttalam", "Noor Nagar", "Karadipuwar", "Periyanagavillu"
            };

            String northern[] = {"Girambe", "Talawattegedara", "Potuhera", "Nailiya", "Kurunegala", "Muththettugala", "Wellawa", "Ganewatte", "Yahapauwa", "Nagollagama", "Timbiriyagedara",
                "Maho", "Randenigama", "Abanpola", "Galgamuwa", "Senarathgama", "Thambuttegama", "Talawa", "Srawasthipura", "Anuradhapura Town", "Anuradhapura",
                "Mihintale Junction", "Saliyapura", "Parasangahawewa", "Medagama", "Medawachchiya", "Poonewa", "Erittaperiyakulam", "Vavuniya", "Mihintale",
                "Parasangahawewa", "Medawachchiya", "Vavuniya", "Omantai", "Puliyankulama", "Mankulam", "Murukandi", "Kilinochchi", "Paranthan", "ElephantPass",
                "Pallai", "Kodikamam", "Chavakachcheri", "Navatkuli", "Jaffna", "Jaffna CSM", "Jaffna SM", "Kondavil", "Chunnakam", "Kankesanthurei"
            };

            String batticola[] = {"Konwewa", "Moragollagama", "kekirawa", "Kalawewa", "Palugaswewa", "Gal Oya Junction", "Higurakgoda", "Polonnaruwa", "Manampitiya", "Welikanda",
                "Punani", "Valachchenai", "Eravur", "Batticaloa"};

            String cost[] = {"Fort", "Secretartat Halt", "Kompnnavidiya", "Kollupitiya", "Bambalapitiya", "wellawatte", "Dehiwala", "Mount Laviniya", "Rathmalana", "Angulana",
                "Lunawa", "Moratuwa", "Koralawella", "Egodauyana", "Panadura", "Pinwatte", "Wadduwa", "Train Halt 01", "Kalutara North", "Kaluthara South", "Katukurunda",
                "Payagala North", "Payagala south", "Maggona", "Beruwala", "Hettimulla", "Aluthgama", "Bentota", "Induruwa", "Mha Induruwa", "kosgoda", "Piyagama",
                "Ahungalle", "Patagamgoda", "Balapitiya", "Andadola", "Kandegoda", "Ambalangoda", "Madampagama", "Akurala", "Kahawa", "Telwatte", "Seenigama",
                "Hikkaduwa", "Thiranagama", "Kumarakanda", "Dodanduwa", "Rathgama", "Boossa", "Ginthota", "Piyadigama", "Richmond Hill", "Galle", "Katugoda",
                "Unawatuna", "Taple", "Habaraduwa", "Koggala", "Kathaluwa", "Ahangama", "Midigama", "Kumbalgama", "weligama", "Polwathumodara", "Mirissa", "Kamburugamuwa",
                "Walgama", "Matara", "Piliduwa"};

            String kv[] = {"Baseline Road", "Cotta Road", "Narahenpita", "Kirulapone", "Nugegoda", "Udhamulla", "Nawinna", "Maharagama", "Pannipitiya", "Kottawa", "Malapalle",
                "Homagama Hospital", "Homagama", "Panagoda", "Godagama", "Meegoda", "Watareka", "Padukka", "Arukkuwatte", "Angampitiya", "Uggalla", "Pinnawala",
                "Gammana", "Morakele", "Waga", "Kadugoda", "Kosgama", "puwakpitiya", "Avisawella"};

            String trinco[] = {"Kantale", "Tambalagamuwa", "China Bay", "Trincomalee"};

            String mannar1[] = {"Cheddikulam", "Madu Road", "Murunkan", "Mannar", "Pesalai", "Talaimannar", "Talaimannar Pier"};

            if (line.getSelectedItem().toString().equals("Main Line")) {
                for (int i = 0; i < main.length; i++) {
                    starts.addItem(main[i]);
                }
            }
            if (line.getSelectedItem().toString().equals("Matale Line")) {
                for (int j = 0; j < matale.length; j++) {
                    starts.addItem(matale[j]);
                }
            }
            if (line.getSelectedItem().toString().equals("Puttlam Line")) {
                for (int k = 0; k < puttalama.length; k++) {
                    starts.addItem(puttalama[k]);
                }
            }
            if (line.getSelectedItem().toString().equals("Northern Line")) {
                for (int m = 0; m < northern.length; m++) {
                    starts.addItem(northern[m]);
                }
            }
            if (line.getSelectedItem().toString().equals("Batticoloa Line")) {
                for (int n = 0; n < batticola.length; n++) {
                    starts.addItem(batticola[n]);
                }
            }
            if (line.getSelectedItem().toString().equals("Coast Line")) {
                for (int o = 0; o < cost.length; o++) {
                    starts.addItem(cost[o]);
                }
            }
            if (line.getSelectedItem().toString().equals("KV Line")) {
                for (int p = 0; p < kv.length; p++) {
                    starts.addItem(kv[p]);
                }
            }
            if (line.getSelectedItem().toString().equals("Trincomalee Line")) {
                for (int q = 0; q < trinco.length; q++) {
                    starts.addItem(trinco[q]);
                }
            }
            if (line.getSelectedItem().toString().equals("Talaimannar Line")) {

                for (int r = 0; r < mannar1.length; r++) {

                    starts.addItem(mannar1[r]);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_lineItemStateChanged

    private void lineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lineMouseClicked

    }//GEN-LAST:event_lineMouseClicked

    private void line1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_line1ItemStateChanged
        try {
            ends.setSelectedItem("null");
            ends.removeAllItems();
            //Matale Line  Puttlam Line  Northern Line  Batticoloa Line  Coast Line  KV Line  Trincomalee Line Talaimannar Line
            String main[] = {"Maradana", "Dematagoda", "Kelaniya", "Wanawasala", "Hunupitiya", "Enderamulla", "Horape", "Ragama", "Walpola", "Batuwatte", "Bulugahagoda", "Ganemulla", "Yagoda", "Gampaha", "Daraluwa", "Bemmulla", "Magelegoda", "Heendeniya", "Veyangoda", "Wandurawa",
                "Keenawala", "Pallewala", "Ganegoda", "Wijayarajadahana", "Mihirigama", "Wilwatte", "Botale", "Abeypussa", "Yattalgoda", "Buthgamuwa", "Alawwa", "Wlakubura", "Polgahawela",
                "Panaleeya", "Tismalpola", "Yatagama", "Rambukkana", "Kadigamuwa", "Gangoda", "Ihalakotte", "Balana", "Kadugannawa", "Pilimatalawa", "Peradeniya", "Koshinna", "Gelioya",
                "Gampola", "Tembligala", "Ulapone", "Nawalapitiya", "Inguruoya", "Galaboda", "Watawala", "Ihalawatawala", "Rosella", "Hatton", "Kotagala", "Talawakele", "watagoda",
                "Greatwestern", "Radella", "Nanuoya", "Perakumpura", "Ambewela", "Pattipola", "Ohiya", "Idalgasinna", "Haputale", "Deyatalawa", "Bandarawela", "Kinigama",
                "Heeloya", "Kitalelle", "Elle", "Demodara", "Uduwara", "Haliela", "Badulla"
            };
            String matale[] = {"Sarasaviuyana", "Kandy", "Mahaiyawa", "Katugastota", "Udatalawinna", "Wattegama", "Pathanpha", "Udaththawala", "Ukuwela", "Matale"};
            String puttalama[] = {"Peralanda", "Kandana", "Kapuwatte", "Ja-Ela", "Tudella", "Kudahakapola", "Alawatupitiya", "Seeduwa", "Liyanagemulla",
                "Katunayaka Airport", "Katunayake", "Trade Zoone", "Kurana", "Negombo", "kattuwa", "Kochchikade", "Waikkala", "Bolawatte",
                "Borelessa", "Lunuwila", "Tummodara", "Nattandiya", "Walahapitiya", "Kudawewa", "Nelumpokuna", "Madampe", "Kakkapalliya",
                "Sawarana", "Chilaw", "Manuwangama", "Bangadeniya", "Arachchikattuwa", "Anawilundawa", "Battaluoya", "Pulachchikulam", "Mundal",
                "Mangalaeliya", "Madurankuliya", "Erukkalam pendu", "Palavi", "Thilladiya", "Puttalam", "Noor Nagar", "Karadipuwar", "Periyanagavillu"
            };

            String northern[] = {"Girambe", "Talawattegedara", "Potuhera", "Nailiya", "Kurunegala", "Muththettugala", "Wellawa", "Ganewatte", "Yahapauwa", "Nagollagama", "Timbiriyagedara",
                "Maho", "Randenigama", "Abanpola", "Galgamuwa", "Senarathgama", "Thambuttegama", "Talawa", "Srawasthipura", "Anuradhapura Town", "Anuradhapura",
                "Mihintale Junction", "Saliyapura", "Parasangahawewa", "Medagama", "Medawachchiya", "Poonewa", "Erittaperiyakulam", "Vavuniya", "Mihintale",
                "Parasangahawewa", "Medawachchiya", "Vavuniya", "Omantai", "Puliyankulama", "Mankulam", "Murukandi", "Kilinochchi", "Paranthan", "ElephantPass",
                "Pallai", "Kodikamam", "Chavakachcheri", "Navatkuli", "Jaffna", "Jaffna CSM", "Jaffna SM", "Kondavil", "Chunnakam", "Kankesanthurei"
            };

            String batticola[] = {"Konwewa", "Moragollagama", "kekirawa", "Kalawewa", "Palugaswewa", "Gal Oya Junction", "Higurakgoda", "Polonnaruwa", "Manampitiya", "Welikanda",
                "Punani", "Valachchenai", "Eravur", "Batticaloa"};

            String cost[] = {"Fort", "Secretartat Halt", "Kompnnavidiya", "Kollupitiya", "Bambalapitiya", "wellawatte", "Dehiwala", "Mount Laviniya", "Rathmalana", "Angulana",
                "Lunawa", "Moratuwa", "Koralawella", "Egodauyana", "Panadura", "Pinwatte", "Wadduwa", "Train Halt 01", "Kalutara North", "Kaluthara South", "Katukurunda",
                "Payagala North", "Payagala south", "Maggona", "Beruwala", "Hettimulla", "Aluthgama", "Bentota", "Induruwa", "Mha Induruwa", "kosgoda", "Piyagama",
                "Ahungalle", "Patagamgoda", "Balapitiya", "Andadola", "Kandegoda", "Ambalangoda", "Madampagama", "Akurala", "Kahawa", "Telwatte", "Seenigama",
                "Hikkaduwa", "Thiranagama", "Kumarakanda", "Dodanduwa", "Rathgama", "Boossa", "Ginthota", "Piyadigama", "Richmond Hill", "Galle", "Katugoda",
                "Unawatuna", "Taple", "Habaraduwa", "Koggala", "Kathaluwa", "Ahangama", "Midigama", "Kumbalgama", "weligama", "Polwathumodara", "Mirissa", "Kamburugamuwa",
                "Walgama", "Matara", "Piliduwa"};

            String kv[] = {"Baseline Road", "Cotta Road", "Narahenpita", "Kirulapone", "Nugegoda", "Udhamulla", "Nawinna", "Maharagama", "Pannipitiya", "Kottawa", "Malapalle",
                "Homagama Hospital", "Homagama", "Panagoda", "Godagama", "Meegoda", "Watareka", "Padukka", "Arukkuwatte", "Angampitiya", "Uggalla", "Pinnawala",
                "Gammana", "Morakele", "Waga", "Kadugoda", "Kosgama", "puwakpitiya", "Avisawella"};

            String trinco[] = {"Kantale", "Tambalagamuwa", "China Bay", "Trincomalee"};

            String mannar1[] = {"Cheddikulam", "Madu Road", "Murunkan", "Mannar", "Pesalai", "Talaimannar", "Talaimannar Pier"};

            if (line1.getSelectedItem().toString().equals("Main Line")) {
                for (int i = 0; i < main.length; i++) {
                    ends.addItem(main[i]);
                }
            }
            if (line1.getSelectedItem().toString().equals("Matale Line")) {
                for (int j = 0; j < matale.length; j++) {
                    ends.addItem(matale[j]);
                }
            }
            if (line1.getSelectedItem().toString().equals("Puttlam Line")) {
                for (int k = 0; k < puttalama.length; k++) {
                    ends.addItem(puttalama[k]);
                }
            }
            if (line1.getSelectedItem().toString().equals("Northern Line")) {
                for (int m = 0; m < northern.length; m++) {
                    ends.addItem(northern[m]);
                }
            }
            if (line1.getSelectedItem().toString().equals("Batticoloa Line")) {
                for (int n = 0; n < batticola.length; n++) {
                    ends.addItem(batticola[n]);
                }
            }
            if (line1.getSelectedItem().toString().equals("Coast Line")) {
                for (int o = 0; o < cost.length; o++) {
                    ends.addItem(cost[o]);
                }
            }
            if (line1.getSelectedItem().toString().equals("KV Line")) {
                for (int p = 0; p < kv.length; p++) {
                    ends.addItem(kv[p]);
                }
            }
            if (line1.getSelectedItem().toString().equals("Trincomalee Line")) {
                for (int q = 0; q < trinco.length; q++) {
                    ends.addItem(trinco[q]);
                }
            }
            if (line1.getSelectedItem().toString().equals("Talaimannar Line")) {

                for (int r = 0; r < mannar1.length; r++) {

                    ends.addItem(mannar1[r]);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_line1ItemStateChanged

    private void line1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_line1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_line1MouseClicked

    private void datesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datesMouseClicked
        try {

            SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
            Date fdate = s_date.getDate();
            Date sdate = e_date.getDate();

            long diffIn = Math.abs(sdate.getTime() - fdate.getTime());
            long diff = TimeUnit.DAYS.convert(diffIn, TimeUnit.MILLISECONDS);
            dates.setText(String.valueOf(diff));
            if (sdate.getTime() < fdate.getTime()) {
                JOptionPane.showMessageDialog(rootPane, "Wrong input of Date range", "Sorry", JOptionPane.ERROR_MESSAGE);
            }

            Date now = jCalendar2.getDate();
            if (fdate.getTime() < now.getTime()) {
                JOptionPane.showMessageDialog(null, "You can not booking for previous dates", null, JOptionPane.ERROR_MESSAGE);
                dates.setText("0");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_datesMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            /*
             String db_date=null;
             String now_date=jCalendar1.getDate().toString();
             ResultSet rs;
             Statement st;
             Connection con = db.getDBCon();
             st = con.createStatement();
             String sql = "select date from passenger_booking where NIC='" + Integer.parseInt(nic.getText()) + "'";
             rs = st.executeQuery(sql);
             boolean b=false;
             while (rs.next()) {                
             db_date=rs.getString("date");
             SimpleDateFormat sdf = new SimpleDateFormat("E MMM dd HH:mm:ss z yyyy");
             Date dbdate = sdf.parse(db_date);
             Date now_day=sdf.parse(now_date);
             SimpleDateFormat sdf1 = new SimpleDateFormat("E MMM dd yyyy");
             String db_old=sdf1.format(dbdate);
             String db_new=sdf1.format(now_day);
             if (db_old.equals(db_new)) {
             db.iud("delete from passenger_booking where NIC='" + Integer.parseInt(nic.getText()) + "' AND date='" + db_date+ "'");
             JOptionPane.showMessageDialog(rootPane, "Delete Succesfully", "Thank You", JOptionPane.WARNING_MESSAGE);
             }else{
             JOptionPane.showMessageDialog(rootPane, "Date mismatch", "Thank You", JOptionPane.WARNING_MESSAGE);
             }
             b=true;
             }      
             */

            /*
             String db_date = null;
             String now = jCalendar2.getDate().toString();
             ResultSet rs;
             java.sql.Statement st;
             Connection con = db.getDBCon();
             st = con.createStatement();
             String sql = "select date from compartment_reservation where nic='" + Integer.parseInt(nic.getText()) + "'";
             rs = st.executeQuery(sql);
             boolean b = false;
             boolean error = false;
             boolean success = false;
             while (rs.next()) {
             db_date = rs.getString("date");
             SimpleDateFormat sdf = new SimpleDateFormat("E MMM dd HH:mm:ss z yyyy");
             Date dbdate = sdf.parse(db_date);
             Date now_day = sdf.parse(now);
             SimpleDateFormat sdf1 = new SimpleDateFormat("E MMM dd yyyy");
             String db_old = sdf1.format(dbdate);
             String db_new = sdf1.format(now_day);
             if (db_old.equals(db_new)) {
             db.iud("delete from compartment_reservation where nic='" + Integer.parseInt(nic.getText()) + "' AND date='" + db_date + "'");
             //JOptionPane.showMessageDialog(rootPane, "Delete Succesfully", "Thank You", JOptionPane.WARNING_MESSAGE);
             success = true;
             b = true;
             } else {
             // JOptionPane.showMessageDialog(rootPane, "Date mismatch", "Thank You", JOptionPane.WARNING_MESSAGE);
             error = true;
             b = true;
             }

             }
             if (success == true) {
             JOptionPane.showMessageDialog(rootPane, "Delete Succesfully", "Thank You", JOptionPane.WARNING_MESSAGE);
             }
             if (error = true) {
             JOptionPane.showMessageDialog(rootPane, "Date mismatch", "Thank You", JOptionPane.WARNING_MESSAGE);
             }
             */
            SimpleDateFormat sdf = new SimpleDateFormat("E MMM dd yyyy");
            String date_now = sdf.format(jCalendar2.getDate());

            String avacheck = null;
            ResultSet rs;
            java.sql.Statement st;
            Connection con = db.getDBCon();
            String sql = "Select * from compartment_reservation where status='booking' AND  nic='" + nic.getText() + "' AND date='" + date_now + "'";
            st = con.createStatement();
            rs = st.executeQuery(sql);

            while (rs.next()) {
                avacheck = rs.getString("status");
            }
            try {

                if (avacheck.equals("booking")) {
                    db.iud("delete from compartment_reservation where nic='" + nic.getText() + "' AND date='" + date_now + "'");
                    JOptionPane.showMessageDialog(null, "Cancellation completed", "Thank You", JOptionPane.INFORMATION_MESSAGE);
                }

            } catch (NullPointerException n) {
                //n.printStackTrace();
                JOptionPane.showMessageDialog(null, "This reservation already overdue.", "Sorry", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {

            Connection con;
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/railway", "root", "123");

            JasperDesign jdesign = JRXmlLoader.load("C:\\Users\\Gunesh Madusanka\\Documents\\NetBeansProjects\\Railway Reservation System\\src\\railway\\reservation\\system\\compartment_full_report.jrxml");
            String sql = "select * from compartment_reservation";

            JRDesignQuery updateQuery = new JRDesignQuery();
            updateQuery.setText(sql);
            jdesign.setQuery(updateQuery);
            JasperReport jreport = JasperCompileManager.compileReport(jdesign);
            JasperPrint jPrint = JasperFillManager.fillReport(jreport, null, con);

            JasperViewer.viewReport(jPrint);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void countKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_countKeyReleased

    }//GEN-LAST:event_countKeyReleased

    private void countPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_countPropertyChange
        try {

            if (count.getValue() > balance) {
                JOptionPane.showMessageDialog(null, "Insufficient Compartment Count", "Sorry", JOptionPane.WARNING_MESSAGE);
            }
            if (count.getValue() > 5) {
                JOptionPane.showMessageDialog(null, "You are reaching maximum normal reservation", "Sorry", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            // e.printStackTrace();
        }
    }//GEN-LAST:event_countPropertyChange

    private void nicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                org.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_nicKeyPressed

    private void orgKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orgKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                name.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_orgKeyPressed

    private void nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                line.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_nameKeyPressed

    private void lineKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lineKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                line1.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_lineKeyPressed

    private void line1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_line1KeyPressed

        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                starts.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_line1KeyPressed

    private void startsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_startsKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                ends.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_startsKeyPressed

    private void endsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_endsKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                passenger.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_endsKeyPressed

    private void passengerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passengerKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                //    s_date.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_passengerKeyPressed

    private void s_dateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_s_dateKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                e_date.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_s_dateKeyPressed

    private void e_dateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e_dateKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                dates.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_e_dateKeyPressed

    private void kmKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kmKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                //vat.grabFocus();
                vat.requestFocusInWindow();
                SwingUtilities.getWindowAncestor(this).setFocusTraversalPolicy(null);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_kmKeyPressed

    private void countKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_countKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                res_charge.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_countKeyPressed

    private void res_chargeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_res_chargeKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                fee.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_res_chargeKeyPressed

    private void feeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_feeKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                total.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_feeKeyPressed

    private void totalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                authorized.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_totalKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     try {
            SimpleDateFormat sdf = new SimpleDateFormat("E MMM dd yyyy");
            String date_now = sdf.format(jCalendar2.getDate());
            //System.out.println(date_now);
            Connection con;
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/railway", "root", "123");

            JasperDesign jdesign = JRXmlLoader.load("C:\\Users\\Gunesh Madusanka\\Documents\\NetBeansProjects\\Railway Reservation System\\src\\railway\\reservation\\system\\newcompartment_bill_report.jrxml");
            String sql = "select * from compartment_reservation where nic='"+nic.getText()+"' AND date='"+date_now+"'";
            
            JRDesignQuery updateQuery = new JRDesignQuery();
            updateQuery.setText(sql);
            jdesign.setQuery(updateQuery);
            JasperReport jreport = JasperCompileManager.compileReport(jdesign);
            JasperPrint jPrint = JasperFillManager.fillReport(jreport, null, con);

            JasperViewer.viewReport(jPrint);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        try {
            dispose();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jLabel9MouseClicked

    private void kGradientPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kGradientPanel1MousePressed
         x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_kGradientPanel1MousePressed

    private void kGradientPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kGradientPanel1MouseDragged
       int xx = evt.getXOnScreen();
        int yy = evt.getYOnScreen();
        this.setLocation(xx - x, yy - y);
    }//GEN-LAST:event_kGradientPanel1MouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(compartment_reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(compartment_reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(compartment_reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(compartment_reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new compartment_reservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField authorized;
    private javax.swing.JLabel ava_count;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.components.JSpinField count;
    private javax.swing.JTextField dates;
    private com.toedter.calendar.JDateChooser e_date;
    private javax.swing.JComboBox ends;
    private com.toedter.components.JSpinField fee;
    private javax.swing.JRadioButton first;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private com.toedter.calendar.JCalendar jCalendar2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private com.toedter.components.JSpinField km;
    private javax.swing.JComboBox line;
    private javax.swing.JComboBox line1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField nic;
    private javax.swing.JTextField org;
    private javax.swing.JTextField passenger;
    private javax.swing.JTextField res_charge;
    private javax.swing.JLabel res_com;
    private com.toedter.calendar.JDateChooser s_date;
    private javax.swing.JRadioButton second;
    private javax.swing.JComboBox starts;
    private javax.swing.JRadioButton third;
    private javax.swing.JTextField total;
    private com.toedter.components.JSpinField vat;
    // End of variables declaration//GEN-END:variables

    private void status() {
        try {
            String now = null;
            String dbase = null;
            Date today = new Date();
            today.getTime();

            ResultSet rs;
            java.sql.Statement st;
            String sql = "select end_date from compartment_reservation where status='booking'";
            Connection con = db.getDBCon();
            st = con.createStatement();
            rs = st.executeQuery(sql);
            while (rs.next()) {
                dbase = rs.getString("end_date");
                SimpleDateFormat sdf = new SimpleDateFormat("E MMM dd yyyy");
                Date dbdate = sdf.parse(dbase);

                if (today.getTime() == dbdate.getTime() || today.getTime() >= dbdate.getTime()) {
                    System.out.println("check");
                    db.iud("update compartment_reservation set status='available' where end_date='" + dbase + "'  ");

                }

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void validate_nic() {
        try {
            if (!(nic.getText().matches("^[0-9]{9}[vV]$"))) {
                JOptionPane.showMessageDialog(null, "Invalid Input for NIC ", "Error", JOptionPane.ERROR_MESSAGE);
                nic.setBackground(Color.red);
                nic.setForeground(Color.WHITE);
                nic.setText(null);
            } else {
                nic.setBackground(Color.GREEN);
                nic.setForeground(Color.WHITE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public int balance;

    private void com_chcker() {
        try {
            int available_compartment = 220;
            int booking_compartment = 0;

            ResultSet rs;
            Statement st;
            Connection con = db.getDBCon();
            String sql = "select * from compartment_reservation where status='booking'";
            st = (Statement) con.createStatement();
            rs = st.executeQuery(sql);

            while (rs.next()) {
                booking_compartment += 1;
            }

            balance = available_compartment - booking_compartment;
            ava_count.setText("Remaining Compartment :" + balance);
            res_com.setText("Booking Compartment :" + booking_compartment);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
