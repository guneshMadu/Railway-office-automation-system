/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package railway.reservation.system;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.TimeUnit;

/**
 *
 * @author Gunesh Madusanka
 */
public class time_checker extends javax.swing.JFrame {

    /**
     * Creates new form time_checker
     */
    public time_checker() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        start = new com.toedter.calendar.JDateChooser();
        end = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        t1 = new javax.swing.JTextField();
        t2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jButton4 = new javax.swing.JButton();
        nic = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        other = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 99, 239, -1));
        getContentPane().add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 180, 350, -1));

        jLabel1.setText("Start Date");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 99, -1, -1));

        jLabel2.setText("End Date");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jButton1.setText("Compare");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 236, -1, -1));
        getContentPane().add(start, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 319, 350, -1));
        getContentPane().add(end, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 368, 350, -1));

        jLabel3.setText("Start");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 319, -1, -1));

        jLabel4.setText("End");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 368, -1, -1));

        jButton2.setText("get Differene");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(325, 406, -1, -1));
        getContentPane().add(t1, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 237, 99, -1));
        getContentPane().add(t2, new org.netbeans.lib.awtextra.AbsoluteConstraints(233, 407, 86, -1));

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(325, 435, -1, -1));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 293, 350, -1));
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 345, 320, -1));
        getContentPane().add(jCalendar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, -1, -1));

        jButton4.setText("SAVE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 350, -1, -1));
        getContentPane().add(nic, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 270, 150, -1));

        jLabel5.setText("NIC");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 270, 30, -1));

        jLabel6.setText("OTHER");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 310, -1, -1));
        getContentPane().add(other, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 310, 150, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            String d1 = jDateChooser1.getDate().toString();

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String d = sdf.format(jDateChooser1.getDate());
            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
            String d2 = sdf1.format(jDateChooser2.getDate());
            // System.out.println(d2);

            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate nw = LocalDate.now();
            //  SimpleDateFormat sdf2 = new SimpleDateFormat("dd/MM/yyyy");
            //  String d3 = sdf2.format(LocalDate.now());
            //System.out.println(nw.toString());
            String dd = nw.toString();
            System.out.println(dd);
            System.out.println(d2);
            if (d == dd) {
                System.out.println("match");
            } else {
                System.out.println("no match");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
            Date f_date = start.getDate();
            Date s_date = end.getDate();

            long diffIn = Math.abs(s_date.getTime() - f_date.getTime());
            long diff = TimeUnit.DAYS.convert(diffIn, TimeUnit.MILLISECONDS);
            t2.setText(String.valueOf(diff));
            if (s_date.getTime() > f_date.getTime()) {
                System.out.println("bigger");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            ResultSet rs;
            Statement st;
            Connection con = db.getDBCon();
            st = con.createStatement();
            String sql = "select * from check_new";
            rs = st.executeQuery(sql);
            boolean b = false;
            String dat0 = null;
            String dat1 = null;

            while (rs.next()) {
                dat0 = rs.getString("start");
                dat1 = rs.getString("end");
                SimpleDateFormat sdf = new SimpleDateFormat("E MMM dd HH:mm:ss z yyyy");
                Date f_dbdate = sdf.parse(dat0);
                Date s_dbdate = sdf.parse(dat1);
                Date f_date = start.getDate();
                Date s_date = end.getDate();
                if (f_date.getTime() < f_dbdate.getTime() && s_date.getTime() < f_dbdate.getTime()) {
                    jTextField1.setText("ok"); 
                }
                if (f_date.getTime() < f_dbdate.getTime() && s_date.getTime() > s_dbdate.getTime()) {
                    jTextField1.setText("not set");   
                    break;
                }
                if (f_date.getTime() > f_dbdate.getTime() && s_date.getTime() < s_dbdate.getTime()) {
                    jTextField1.setText("not set");
                    break;   
                }
                if (f_date.getTime() > f_dbdate.getTime() && f_date.getTime() < s_dbdate.getTime() && s_date.getTime() > s_dbdate.getTime()) {
                    jTextField1.setText("not set");
                    break;  
                }
                if (f_date.getTime() < f_dbdate.getTime() && s_date.getTime() > f_dbdate.getTime() && s_date.getTime() < s_dbdate.getTime()) {
                    jTextField1.setText("not set");
                    break;
                }

                if (f_date.getTime() > s_dbdate.getTime() && s_date.getTime() > s_dbdate.getTime()) {
                    jTextField1.setText("ok");
                }

                long diffIn = Math.abs(s_date.getTime() - f_date.getTime());
                long diff = TimeUnit.DAYS.convert(diffIn, TimeUnit.MILLISECONDS);
                t2.setText(String.valueOf(diff));
                b = true;
            }
            //    if (jTextField1.getText().equals("ok")) {
            //    db.iud("insert into check_new (start,end) values ('"+start.getDate().toString()+"','"+end.getDate().toString()+"')");
           // }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            ResultSet rs;
            Statement st;
            Connection con=db.getDBCon();
            st=con.createStatement();
            String sql="select * from check_new";
            rs=st.executeQuery(sql);
            boolean b=false;
            String date_now=jCalendar1.getDate().toString();
            SimpleDateFormat sdf=new SimpleDateFormat("E MMM dd yyyy");
           String mod_date=sdf.format(jCalendar1.getDate());
           
            db.iud("insert into check_new (NIC, DATE, OTHER) values ('"+Integer.parseInt(nic.getText())+"','"+mod_date+"','"+other.getText()+"')");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(time_checker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(time_checker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(time_checker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(time_checker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new time_checker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser end;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private com.toedter.calendar.JCalendar jCalendar1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField nic;
    private javax.swing.JTextField other;
    private com.toedter.calendar.JDateChooser start;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    // End of variables declaration//GEN-END:variables
}
