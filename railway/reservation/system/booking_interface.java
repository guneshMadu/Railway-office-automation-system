/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package railway.reservation.system;

import com.toedter.calendar.JCalendar;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerDateModel;

/**
 *
 * @author Gunesh Madusanka
 */
public class booking_interface extends javax.swing.JFrame {

    /**
     * Creates new form booking_interface
     */
    int x, y;
    public booking_interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel9 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        nic = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        Date date=new Date();
        SpinnerDateModel sm=new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        s_time = new javax.swing.JSpinner(sm);
        Date date1=new Date();
        SpinnerDateModel sm1=new SpinnerDateModel(date1, null, null, Calendar.HOUR_OF_DAY);
        e_time = new javax.swing.JSpinner(sm1);
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        com_num = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        s_number = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        num_of_ticket = new com.toedter.components.JSpinField();
        type = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        line3 = new javax.swing.JComboBox();
        line2 = new javax.swing.JComboBox();
        source = new javax.swing.JComboBox();
        destination = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        ac = new javax.swing.JRadioButton();
        non = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        first = new javax.swing.JRadioButton();
        second = new javax.swing.JRadioButton();
        third = new javax.swing.JRadioButton();
        jButton5 = new javax.swing.JButton();
        fare = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        authorise = new javax.swing.JTextField();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jLabel9.setText("jLabel9");

        jLabel19.setText("jLabel19");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));
        setForeground(new java.awt.Color(204, 204, 255));
        setUndecorated(true);
        setResizable(false);

        kGradientPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        kGradientPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                kGradientPanel1MouseDragged(evt);
            }
        });
        kGradientPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                kGradientPanel1MousePressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Normal Passenger Booking Entry Panel");

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/shutdown_48px.png"))); // NOI18N
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nicKeyReleased(evt);
            }
        });
        jPanel1.add(nic, new org.netbeans.lib.awtextra.AbsoluteConstraints(278, 12, 198, -1));

        jLabel2.setText("National Identity Card");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 15, -1, -1));
        jPanel1.add(fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(278, 50, 198, -1));
        jPanel1.add(lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(278, 88, 198, -1));

        JSpinner.DateEditor de=new JSpinner.DateEditor(s_time,"hh:mm:ssa");
        s_time.setEditor(de);
        jPanel1.add(s_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(278, 126, 198, -1));

        JSpinner.DateEditor de1=new JSpinner.DateEditor(e_time,"hh:mm:ssa");
        e_time.setEditor(de1);
        jPanel1.add(e_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(278, 164, 198, -1));
        jPanel1.add(jCalendar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 202, 320, 210));

        jLabel3.setText("First Name");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 53, -1, -1));

        jLabel4.setText("Last Name");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 91, -1, -1));

        jLabel5.setText("Start Time");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 129, -1, -1));

        jLabel6.setText("End Time");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 167, -1, -1));

        jLabel7.setText("Date");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 202, -1, -1));

        com_num.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                com_numActionPerformed(evt);
            }
        });
        com_num.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                com_numKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                com_numKeyReleased(evt);
            }
        });
        jPanel1.add(com_num, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 420, 230, -1));

        s_number.setColumns(20);
        s_number.setRows(5);
        s_number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                s_numberKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(s_number);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, 259, -1));

        jLabel11.setText("Compartment Number");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, -1, -1));

        jLabel12.setText("Seat Number");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, -1, -1));

        jPanel3.setBackground(new java.awt.Color(255, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setText("            TRIN FARE");
        jPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 135, 36));
        jPanel3.add(num_of_ticket, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 50, 176, -1));

        type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sleeperts Reservation", "Observation Room", "Normal Reservation" }));
        jPanel3.add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 90, 176, -1));

        jLabel8.setText("Number of Tickets");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        jLabel10.setText("Type");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 93, -1, -1));

        line3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT Destination Line First", "Main Line", "Matale Line", "Puttlam Line", "Northern Line", "Batticoloa Line", "Coast Line", "KV Line", "Trincomalee Line", "Talaimannar Line" }));
        line3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                line3ItemStateChanged(evt);
            }
        });
        line3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                line3MouseClicked(evt);
            }
        });
        jPanel3.add(line3, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 144, 176, -1));

        line2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT Source Line First", "Main Line", "Matale Line", "Puttlam Line", "Northern Line", "Batticoloa Line", "Coast Line", "KV Line", "Trincomalee Line", "Talaimannar Line" }));
        line2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                line2ItemStateChanged(evt);
            }
        });
        line2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                line2MouseClicked(evt);
            }
        });
        jPanel3.add(line2, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 144, 153, -1));

        jPanel3.add(source, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 182, 176, -1));

        jPanel3.add(destination, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 220, 176, -1));

        jLabel15.setText("Source ");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 185, -1, -1));

        jLabel16.setText("Destination");
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 223, -1, -1));

        jLabel17.setText("Facilities");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 262, 54, -1));

        buttonGroup2.add(ac);
        ac.setText("A/C");
        ac.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                acItemStateChanged(evt);
            }
        });
        jPanel3.add(ac, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 258, -1, -1));

        buttonGroup2.add(non);
        non.setSelected(true);
        non.setText("Non A/C");
        jPanel3.add(non, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 258, -1, -1));

        jLabel14.setText("Class");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 299, -1, -1));

        buttonGroup1.add(first);
        first.setText("1st Class");
        jPanel3.add(first, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 290, -1, -1));

        buttonGroup1.add(second);
        second.setText("2nd Class");
        jPanel3.add(second, new org.netbeans.lib.awtextra.AbsoluteConstraints(262, 290, -1, -1));

        buttonGroup1.add(third);
        third.setSelected(true);
        third.setText("3rd Class");
        third.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thirdActionPerformed(evt);
            }
        });
        jPanel3.add(third, new org.netbeans.lib.awtextra.AbsoluteConstraints(332, 290, -1, -1));

        jButton5.setText("Train Fares Calculator");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 331, -1, -1));
        jPanel3.add(fare, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 372, 354, -1));

        jLabel13.setText("Authorized Person");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 410, 137, -1));
        jPanel3.add(authorise, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 410, 176, -1));

        kGradientPanel2.setBorder(new javax.swing.border.MatteBorder(null));
        kGradientPanel2.setkEndColor(new java.awt.Color(204, 255, 204));
        kGradientPanel2.setkStartColor(new java.awt.Color(255, 255, 204));

        jButton2.setText("Ticket Booking");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Booking Cancelation");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Ticket Generating");

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(kGradientPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(kGradientPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_acItemStateChanged

    }//GEN-LAST:event_acItemStateChanged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            String classes;
            if (first.isSelected()) {
                classes = "1st Class";
            } else if (second.isSelected()) {
                classes = "2nd Class";
            } else {
                classes = "3rd Class";
            }

            String facility;
            if (ac.isSelected()) {
                facility = "A/C";
            } else {
                facility = "Non A/C";
            }
            ResultSet rs;
            Statement st;
            Connection con = db.getDBCon();
            String sql = "select * from train_fare";
            st = con.createStatement();
            rs = st.executeQuery(sql);
            String db_type = null;
            String db_source = null;
            String db_destination = null;
            String db_facilities = null;
            String db_class = null;
            String db_rserve = null;
            String db_fee = null;
            int tot = 0;

            boolean b = false;
            while (rs.next()) {
                db_type = rs.getString("type");
                db_source = rs.getString("source");
                db_destination = rs.getString("destination");
                db_facilities = rs.getString("facilities");
                db_class = rs.getString("class");
                db_rserve = rs.getString("price");
                db_fee = rs.getString("ticket_price");
                tot = Integer.parseInt(db_rserve) + Integer.parseInt(db_fee);
                tot = tot * num_of_ticket.getValue();
                if (classes.equals(db_class)) {
                    if (db_type.equals(type.getSelectedItem().toString())) {
                        if (db_source.equals(source.getSelectedItem().toString())) {
                            if (db_destination.equals(destination.getSelectedItem().toString())) {
                                if (db_facilities.equals(facility)) {
                                    // JOptionPane.showMessageDialog(null, "Train Fare Details Same As Previous", "Thank You", JOptionPane.ERROR_MESSAGE);
                                    fare.setText(String.valueOf(tot));
                                    b = true;
                                }
                            }
                        }
                    }
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void thirdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thirdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thirdActionPerformed

    private void line2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_line2ItemStateChanged
        try {
            source.setSelectedItem("null");
            source.removeAllItems();
            //Matale Line  Puttlam Line  Northern Line  Batticoloa Line  Coast Line  KV Line  Trincomalee Line Talaimannar Line
            String main[] = {"Maradana", "Dematagoda", "Kelaniya", "Wanawasala", "Hunupitiya", "Enderamulla", "Horape", "Ragama", "Walpola", "Batuwatte", "Bulugahagoda", "Ganemulla", "Yagoda", "Gampaha", "Daraluwa", "Bemmulla", "Magelegoda", "Heendeniya", "Veyangoda", "Wandurawa",
                "Keenawala", "Pallewala", "Ganegoda", "Wijayarajadahana", "Mihirigama", "Wilwatte", "Botale", "Abeypussa", "Yattalgoda", "Buthgamuwa", "Alawwa", "Wlakubura", "Polgahawela",
                "Panaleeya", "Tismalpola", "Yatagama", "Rambukkana", "Kadigamuwa", "Gangoda", "Ihalakotte", "Balana", "Kadugannawa", "Pilimatalawa", "Peradeniya", "Koshinna", "Gelioya",
                "Gampola", "Tembligala", "Ulapone", "Nawalapitiya", "Inguruoya", "Galaboda", "Watawala", "Ihalawatawala", "Rosella", "Hatton", "Kotagala", "Talawakele", "watagoda",
                "Greatwestern", "Radella", "Nanuoya", "Perakumpura", "Ambewela", "Pattipola", "Ohiya", "Idalgasinna", "Haputale", "Deyatalawa", "Bandarawela", "Kinigama",
                "Heeloya", "Kitalelle", "Elle", "Demodara", "Uduwara", "Haliela", "Badulla"
            };
            String matale[] = {"Sarasaviuyana", "Kandy", "Mahaiyawa", "Katugastota", "Udatalawinna", "Wattegama", "Pathanpha", "Udaththawala", "Ukuwela", "Matale"};
            String puttalama[] = {"Peralanda", "Kandana", "Kapuwatte", "Ja-Ela", "Tudella", "Kudahakapola", "Alawatupitiya", "Seeduwa", "Liyanagemulla",
                "Katunayaka Airport", "Katunayake", "Trade Zoone", "Kurana", "Negombo", "kattuwa", "Kochchikade", "Waikkala", "Bolawatte",
                "Borelessa", "Lunuwila", "Tummodara", "Nattandiya", "Walahapitiya", "Kudawewa", "Nelumpokuna", "Madampe", "Kakkapalliya",
                "Sawarana", "Chilaw", "Manuwangama", "Bangadeniya", "Arachchikattuwa", "Anawilundawa", "Battaluoya", "Pulachchikulam", "Mundal",
                "Mangalaeliya", "Madurankuliya", "Erukkalam pendu", "Palavi", "Thilladiya", "Puttalam", "Noor Nagar", "Karadipuwar", "Periyanagavillu"
            };

            String northern[] = {"Girambe", "Talawattegedara", "Potuhera", "Nailiya", "Kurunegala", "Muththettugala", "Wellawa", "Ganewatte", "Yahapauwa", "Nagollagama", "Timbiriyagedara",
                "Maho", "Randenigama", "Abanpola", "Galgamuwa", "Senarathgama", "Thambuttegama", "Talawa", "Srawasthipura", "Anuradhapura Town", "Anuradhapura",
                "Mihintale Junction", "Saliyapura", "Parasangahawewa", "Medagama", "Medawachchiya", "Poonewa", "Erittaperiyakulam", "Vavuniya", "Mihintale",
                "Parasangahawewa", "Medawachchiya", "Vavuniya", "Omantai", "Puliyankulama", "Mankulam", "Murukandi", "Kilinochchi", "Paranthan", "ElephantPass",
                "Pallai", "Kodikamam", "Chavakachcheri", "Navatkuli", "Jaffna", "Jaffna CSM", "Jaffna SM", "Kondavil", "Chunnakam", "Kankesanthurei"
            };

            String batticola[] = {"Konwewa", "Moragollagama", "kekirawa", "Kalawewa", "Palugaswewa", "Gal Oya Junction", "Higurakgoda", "Polonnaruwa", "Manampitiya", "Welikanda",
                "Punani", "Valachchenai", "Eravur", "Batticaloa"};

            String cost[] = {"Fort", "Secretartat Halt", "Kompnnavidiya", "Kollupitiya", "Bambalapitiya", "wellawatte", "Dehiwala", "Mount Laviniya", "Rathmalana", "Angulana",
                "Lunawa", "Moratuwa", "Koralawella", "Egodauyana", "Panadura", "Pinwatte", "Wadduwa", "Train Halt 01", "Kalutara North", "Kaluthara South", "Katukurunda",
                "Payagala North", "Payagala south", "Maggona", "Beruwala", "Hettimulla", "Aluthgama", "Bentota", "Induruwa", "Mha Induruwa", "kosgoda", "Piyagama",
                "Ahungalle", "Patagamgoda", "Balapitiya", "Andadola", "Kandegoda", "Ambalangoda", "Madampagama", "Akurala", "Kahawa", "Telwatte", "Seenigama",
                "Hikkaduwa", "Thiranagama", "Kumarakanda", "Dodanduwa", "Rathgama", "Boossa", "Ginthota", "Piyadigama", "Richmond Hill", "Galle", "Katugoda",
                "Unawatuna", "Taple", "Habaraduwa", "Koggala", "Kathaluwa", "Ahangama", "Midigama", "Kumbalgama", "weligama", "Polwathumodara", "Mirissa", "Kamburugamuwa",
                "Walgama", "Matara", "Piliduwa"};

            String kv[] = {"Baseline Road", "Cotta Road", "Narahenpita", "Kirulapone", "Nugegoda", "Udhamulla", "Nawinna", "Maharagama", "Pannipitiya", "Kottawa", "Malapalle",
                "Homagama Hospital", "Homagama", "Panagoda", "Godagama", "Meegoda", "Watareka", "Padukka", "Arukkuwatte", "Angampitiya", "Uggalla", "Pinnawala",
                "Gammana", "Morakele", "Waga", "Kadugoda", "Kosgama", "puwakpitiya", "Avisawella"};

            String trinco[] = {"Kantale", "Tambalagamuwa", "China Bay", "Trincomalee"};

            String mannar1[] = {"Cheddikulam", "Madu Road", "Murunkan", "Mannar", "Pesalai", "Talaimannar", "Talaimannar Pier"};

            if (line2.getSelectedItem().toString().equals("Main Line")) {
                for (int i = 0; i < main.length; i++) {
                    source.addItem(main[i]);
                }
            }
            if (line2.getSelectedItem().toString().equals("Matale Line")) {
                for (int j = 0; j < matale.length; j++) {
                    source.addItem(matale[j]);
                }
            }
            if (line2.getSelectedItem().toString().equals("Puttlam Line")) {
                for (int k = 0; k < puttalama.length; k++) {
                    source.addItem(puttalama[k]);
                }
            }
            if (line2.getSelectedItem().toString().equals("Northern Line")) {
                for (int m = 0; m < northern.length; m++) {
                    source.addItem(northern[m]);
                }
            }
            if (line2.getSelectedItem().toString().equals("Batticoloa Line")) {
                for (int n = 0; n < batticola.length; n++) {
                    source.addItem(batticola[n]);
                }
            }
            if (line2.getSelectedItem().toString().equals("Coast Line")) {
                for (int o = 0; o < cost.length; o++) {
                    source.addItem(cost[o]);
                }
            }
            if (line2.getSelectedItem().toString().equals("KV Line")) {
                for (int p = 0; p < kv.length; p++) {
                    source.addItem(kv[p]);
                }
            }
            if (line2.getSelectedItem().toString().equals("Trincomalee Line")) {
                for (int q = 0; q < trinco.length; q++) {
                    source.addItem(trinco[q]);
                }
            }
            if (line2.getSelectedItem().toString().equals("Talaimannar Line")) {

                for (int r = 0; r < mannar1.length; r++) {

                    source.addItem(mannar1[r]);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_line2ItemStateChanged

    private void line2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_line2MouseClicked

    }//GEN-LAST:event_line2MouseClicked

    private void line3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_line3ItemStateChanged
        try {
            destination.setSelectedItem("null");
            destination.removeAllItems();
            //Matale Line  Puttlam Line  Northern Line  Batticoloa Line  Coast Line  KV Line  Trincomalee Line Talaimannar Line
            String main[] = {"Maradana", "Dematagoda", "Kelaniya", "Wanawasala", "Hunupitiya", "Enderamulla", "Horape", "Ragama", "Walpola", "Batuwatte", "Bulugahagoda", "Ganemulla", "Yagoda", "Gampaha", "Daraluwa", "Bemmulla", "Magelegoda", "Heendeniya", "Veyangoda", "Wandurawa",
                "Keenawala", "Pallewala", "Ganegoda", "Wijayarajadahana", "Mihirigama", "Wilwatte", "Botale", "Abeypussa", "Yattalgoda", "Buthgamuwa", "Alawwa", "Wlakubura", "Polgahawela",
                "Panaleeya", "Tismalpola", "Yatagama", "Rambukkana", "Kadigamuwa", "Gangoda", "Ihalakotte", "Balana", "Kadugannawa", "Pilimatalawa", "Peradeniya", "Koshinna", "Gelioya",
                "Gampola", "Tembligala", "Ulapone", "Nawalapitiya", "Inguruoya", "Galaboda", "Watawala", "Ihalawatawala", "Rosella", "Hatton", "Kotagala", "Talawakele", "watagoda",
                "Greatwestern", "Radella", "Nanuoya", "Perakumpura", "Ambewela", "Pattipola", "Ohiya", "Idalgasinna", "Haputale", "Deyatalawa", "Bandarawela", "Kinigama",
                "Heeloya", "Kitalelle", "Elle", "Demodara", "Uduwara", "Haliela", "Badulla"
            };
            String matale[] = {"Sarasaviuyana", "Kandy", "Mahaiyawa", "Katugastota", "Udatalawinna", "Wattegama", "Pathanpha", "Udaththawala", "Ukuwela", "Matale"};
            String puttalama[] = {"Peralanda", "Kandana", "Kapuwatte", "Ja-Ela", "Tudella", "Kudahakapola", "Alawatupitiya", "Seeduwa", "Liyanagemulla",
                "Katunayaka Airport", "Katunayake", "Trade Zoone", "Kurana", "Negombo", "kattuwa", "Kochchikade", "Waikkala", "Bolawatte",
                "Borelessa", "Lunuwila", "Tummodara", "Nattandiya", "Walahapitiya", "Kudawewa", "Nelumpokuna", "Madampe", "Kakkapalliya",
                "Sawarana", "Chilaw", "Manuwangama", "Bangadeniya", "Arachchikattuwa", "Anawilundawa", "Battaluoya", "Pulachchikulam", "Mundal",
                "Mangalaeliya", "Madurankuliya", "Erukkalam pendu", "Palavi", "Thilladiya", "Puttalam", "Noor Nagar", "Karadipuwar", "Periyanagavillu"
            };

            String northern[] = {"Girambe", "Talawattegedara", "Potuhera", "Nailiya", "Kurunegala", "Muththettugala", "Wellawa", "Ganewatte", "Yahapauwa", "Nagollagama", "Timbiriyagedara",
                "Maho", "Randenigama", "Abanpola", "Galgamuwa", "Senarathgama", "Thambuttegama", "Talawa", "Srawasthipura", "Anuradhapura Town", "Anuradhapura",
                "Mihintale Junction", "Saliyapura", "Parasangahawewa", "Medagama", "Medawachchiya", "Poonewa", "Erittaperiyakulam", "Vavuniya", "Mihintale",
                "Parasangahawewa", "Medawachchiya", "Vavuniya", "Omantai", "Puliyankulama", "Mankulam", "Murukandi", "Kilinochchi", "Paranthan", "ElephantPass",
                "Pallai", "Kodikamam", "Chavakachcheri", "Navatkuli", "Jaffna", "Jaffna CSM", "Jaffna SM", "Kondavil", "Chunnakam", "Kankesanthurei"
            };

            String batticola[] = {"Konwewa", "Moragollagama", "kekirawa", "Kalawewa", "Palugaswewa", "Gal Oya Junction", "Higurakgoda", "Polonnaruwa", "Manampitiya", "Welikanda",
                "Punani", "Valachchenai", "Eravur", "Batticaloa"};

            String cost[] = {"Fort", "Secretartat Halt", "Kompnnavidiya", "Kollupitiya", "Bambalapitiya", "wellawatte", "Dehiwala", "Mount Laviniya", "Rathmalana", "Angulana",
                "Lunawa", "Moratuwa", "Koralawella", "Egodauyana", "Panadura", "Pinwatte", "Wadduwa", "Train Halt 01", "Kalutara North", "Kaluthara South", "Katukurunda",
                "Payagala North", "Payagala south", "Maggona", "Beruwala", "Hettimulla", "Aluthgama", "Bentota", "Induruwa", "Mha Induruwa", "kosgoda", "Piyagama",
                "Ahungalle", "Patagamgoda", "Balapitiya", "Andadola", "Kandegoda", "Ambalangoda", "Madampagama", "Akurala", "Kahawa", "Telwatte", "Seenigama",
                "Hikkaduwa", "Thiranagama", "Kumarakanda", "Dodanduwa", "Rathgama", "Boossa", "Ginthota", "Piyadigama", "Richmond Hill", "Galle", "Katugoda",
                "Unawatuna", "Taple", "Habaraduwa", "Koggala", "Kathaluwa", "Ahangama", "Midigama", "Kumbalgama", "weligama", "Polwathumodara", "Mirissa", "Kamburugamuwa",
                "Walgama", "Matara", "Piliduwa"};

            String kv[] = {"Baseline Road", "Cotta Road", "Narahenpita", "Kirulapone", "Nugegoda", "Udhamulla", "Nawinna", "Maharagama", "Pannipitiya", "Kottawa", "Malapalle",
                "Homagama Hospital", "Homagama", "Panagoda", "Godagama", "Meegoda", "Watareka", "Padukka", "Arukkuwatte", "Angampitiya", "Uggalla", "Pinnawala",
                "Gammana", "Morakele", "Waga", "Kadugoda", "Kosgama", "puwakpitiya", "Avisawella"};

            String trinco[] = {"Kantale", "Tambalagamuwa", "China Bay", "Trincomalee"};

            String mannar1[] = {"Cheddikulam", "Madu Road", "Murunkan", "Mannar", "Pesalai", "Talaimannar", "Talaimannar Pier"};

            if (line3.getSelectedItem().toString().equals("Main Line")) {
                for (int i = 0; i < main.length; i++) {
                    destination.addItem(main[i]);
                }
            }
            if (line3.getSelectedItem().toString().equals("Matale Line")) {
                for (int j = 0; j < matale.length; j++) {
                    destination.addItem(matale[j]);
                }
            }
            if (line3.getSelectedItem().toString().equals("Puttlam Line")) {
                for (int k = 0; k < puttalama.length; k++) {
                    destination.addItem(puttalama[k]);
                }
            }
            if (line3.getSelectedItem().toString().equals("Northern Line")) {
                for (int m = 0; m < northern.length; m++) {
                    destination.addItem(northern[m]);
                }
            }
            if (line3.getSelectedItem().toString().equals("Batticoloa Line")) {
                for (int n = 0; n < batticola.length; n++) {
                    destination.addItem(batticola[n]);
                }
            }
            if (line3.getSelectedItem().toString().equals("Coast Line")) {
                for (int o = 0; o < cost.length; o++) {
                    destination.addItem(cost[o]);
                }
            }
            if (line3.getSelectedItem().toString().equals("KV Line")) {
                for (int p = 0; p < kv.length; p++) {
                    destination.addItem(kv[p]);
                }
            }
            if (line3.getSelectedItem().toString().equals("Trincomalee Line")) {
                for (int q = 0; q < trinco.length; q++) {
                    destination.addItem(trinco[q]);
                }
            }
            if (line3.getSelectedItem().toString().equals("Talaimannar Line")) {

                for (int r = 0; r < mannar1.length; r++) {

                    destination.addItem(mannar1[r]);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_line3ItemStateChanged

    private void line3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_line3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_line3MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            String facility;
            if (ac.isSelected()) {
                facility = "A/C";
            } else {
                facility = "Non A/C";
            }

            String classes;
            if (first.isSelected()) {
                classes = "1st Class";
            } else if (second.isSelected()) {
                classes = "2nd Class";
            } else {
                classes = "Economy Class";
            }
//NIC, date, fname, sname, start_time, end_time, compartment_no, seat_no, num_ticket, type, source, destination, booking_type, facility, fare, authoried,class
            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
            String start = sdf.format(s_time.getValue());
            String end = sdf.format(e_time.getValue());
            db.iud("insert into passenger_booking (NIC, date, fname, sname, start_time, end_time, compartment_no, seat_no, num_ticket, source, destination, booking_type, facility, fare, authoried,class,status)"
                    + " values ('" + Integer.parseInt(nic.getText()) + "','" + jCalendar1.getDate().toString() + "','" + fname.getText() + "','" + lname.getText() + "','" + start.toString() + "','" + end.toString() + "','" + Integer.parseInt(com_num.getText()) + "','" + s_number.getText() + "',"
                    + "'" + num_of_ticket.getValue() + "','" + source.getSelectedItem().toString() + "','" + destination.getSelectedItem().toString() + "','" + type.getSelectedItem().toString() + "','" + facility + "','" + Double.parseDouble(fare.getText()) + "','" + authorise.getText() + "','" + classes + "','booking') ");
            JOptionPane.showMessageDialog(rootPane, "Insert Succesfully", "Thank You", JOptionPane.WARNING_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            String db_date=null;
            String now_date=jCalendar1.getDate().toString();
            ResultSet rs;
            Statement st;
            Connection con = db.getDBCon();
            st = con.createStatement();
            String sql = "select date from passenger_booking where NIC='" + Integer.parseInt(nic.getText()) + "'";
            rs = st.executeQuery(sql);
            boolean b=false;
            while (rs.next()) {                
                db_date=rs.getString("date");
                SimpleDateFormat sdf = new SimpleDateFormat("E MMM dd HH:mm:ss z yyyy");
                Date dbdate = sdf.parse(db_date);
                Date now_day=sdf.parse(now_date);
                SimpleDateFormat sdf1 = new SimpleDateFormat("E MMM dd yyyy");
                String db_old=sdf1.format(dbdate);
               String db_new=sdf1.format(now_day);
                if (db_old.equals(db_new)) {
                     db.iud("delete from passenger_booking where NIC='" + Integer.parseInt(nic.getText()) + "' AND date='" + db_date+ "'");
                     JOptionPane.showMessageDialog(rootPane, "Delete Succesfully", "Thank You", JOptionPane.WARNING_MESSAGE);
                }else{
                     JOptionPane.showMessageDialog(rootPane, "Date mismatch", "Thank You", JOptionPane.WARNING_MESSAGE);
                }
                b=true;
            }      
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void s_numberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_s_numberKeyReleased
        try {
             Statement st;
            ResultSet rs;
            Connection con = db.getDBCon();
            st = con.createStatement();
   String sql = "select * from passenger_booking where ";

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_s_numberKeyReleased

    private void com_numKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_com_numKeyPressed
       
    }//GEN-LAST:event_com_numKeyPressed

    private void nicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicKeyReleased
  
    }//GEN-LAST:event_nicKeyReleased

    private void com_numKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_com_numKeyReleased
        try {
            String dat0=com_num.getText();
            int xx=Integer.parseInt(dat0);
           int y=500;
           int x=500;
            for (int i = 0; i < xx; i++) {
             JTextField jti=new JTextField();
            add(jti);
            jti.setBounds(x, y, 100, 30);
            y+=60;
            x+=60;
            jti.setVisible(true);
            }
          
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_com_numKeyReleased

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked
        try {
            dispose();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jLabel20MouseClicked

    private void com_numActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_com_numActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_com_numActionPerformed

    private void kGradientPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kGradientPanel1MouseDragged
        int xx = evt.getXOnScreen();
        int yy = evt.getYOnScreen();
        this.setLocation(xx - x, yy - y);
    }//GEN-LAST:event_kGradientPanel1MouseDragged

    private void kGradientPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kGradientPanel1MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_kGradientPanel1MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(booking_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(booking_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(booking_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(booking_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new booking_interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ac;
    private javax.swing.JTextField authorise;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField com_num;
    private javax.swing.JComboBox destination;
    private javax.swing.JSpinner e_time;
    private javax.swing.JTextField fare;
    private javax.swing.JRadioButton first;
    private javax.swing.JTextField fname;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private javax.swing.JComboBox line2;
    private javax.swing.JComboBox line3;
    private javax.swing.JTextField lname;
    private javax.swing.JTextField nic;
    private javax.swing.JRadioButton non;
    private com.toedter.components.JSpinField num_of_ticket;
    private javax.swing.JTextArea s_number;
    private javax.swing.JSpinner s_time;
    private javax.swing.JRadioButton second;
    private javax.swing.JComboBox source;
    private javax.swing.JRadioButton third;
    private javax.swing.JComboBox type;
    // End of variables declaration//GEN-END:variables
}
